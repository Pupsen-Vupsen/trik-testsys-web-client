name: Publish package
description: Publishes package to GitHub Package Registry and Docker Hub
branding:
  icon: package
  color: blue

inputs:
  registry:
    description: 'The Docker registry'
    default: ghcr.io
    required: true
  github-token:
    description: 'GitHub token'
    required: true
  image-name:
    description: 'The name of the Docker image'
    default: ${{ github.repository }}
    required: false
  release-branch:
    description: 'The release branch'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Checkout release branch
      shell: bash
      run: git checkout ${{ inputs.release-branch }}

    - name: Install cosign
      uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20
      with:
        cosign-release: 'v2.2.4'

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226

    - name: Log into registry ${{ inputs.registry }}
      uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
      with:
        registry: ${{ inputs.registry }}
        username: ${{ github.actor }}
        password: ${{ inputs.github-token }}

    - name: Generate tags
      shell: bash
      run: |
        LATEST_TAG=$(git tag -l 'v*' | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -n 1)
        if ("${{ github.event.release.tag_name }}" == "$LATEST_TAG"); then
            TAGS="latest\n${{ env.VERSION }}"
        else
            TAGS="${{ env.VERSION }}"
        fi
        
        echo "TAGS=$TAGS" >> $GITHUB_ENV
        echo -e "Tags: $TAGS"

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934
      with:
        images: ${{ inputs.registry }}/${{ inputs.image-name }}
        github-token: ${{ inputs.github-token }}
        tags: ${{ env.TAGS }}

    - name: Build bootJar
      uses: ./.github/actions/execute-gradle
      with:
        gradle-commands: ':bootJar'

    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09
      with:
        context: .
        push: 'true'
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Sign the published Docker image
      if: ${{ github.event_name != 'pull_request' }}
      shell: bash
      env:
        META_TAGS: ${{ steps.meta.outputs.tags }}
        DIGEST: ${{ steps.build-and-push.outputs.digest }}
      run: echo "${{ env.META_TAGS }}" | xargs -I {} cosign sign --yes {}@${{ env.DIGEST }}
